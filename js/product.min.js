//HEADER====================================================================================

if (localStorage.getItem('cartlist')) {
	document.querySelector('.popup-bascet__product').innerHTML = localStorage.getItem('cartlist');
}

if (localStorage.getItem('basket')) {
	document.querySelector('.header-body__basked').innerHTML = localStorage.getItem('basket');
}
resProductSumm();


// меняем иконку в выборе категорий в поиске + выпадающее меню категории
document.querySelector('.header-body__category').addEventListener('click', function () {
	let seach_category = document.querySelector('#icon-category');
	if (seach_category.classList.contains('_icon-header_seach_category')) {
		seach_category.className = "_icon-header_seach_category_deg";
	} else {
		seach_category.className = "_icon-header_seach_category";
	}

	//выпадающее меню категории
	let menu_category = document.querySelector('.header-body__list');
	menu_category.classList.toggle('active');
});

// Выбор категории
let category = document.querySelectorAll('.header-body__link');
for (let i = 0; i < category.length; i++) {
	category[i].onclick = getCategory;
}
function getCategory() {
	let catResult = document.querySelector('.header-body__res-category');
	catResult.innerHTML = this.innerHTML;
	catResult.setAttribute('id', `${this.id}`);
}



// запоминаем историю поиска
function HashSeach() {
	_seachHistory = {};

	this.addValue = function (key, value) {
		return _seachHistory[key] = value;
	}
	this.showHistory = function () {
		return _seachHistory;
	}
}

let history = new HashSeach();


// Меню ==================================================
//навигация

let category_menu = document.querySelectorAll('.menu__link-container');
for (let i = 0; i < category_menu.length; i++) {
	category_menu[i].onclick = showSubCategory;
}
function showSubCategory() {
	if (this.parentNode.children[1] !== undefined) {
		let par = this.parentNode;
		par.lastElementChild.classList.toggle('active')
	}

}

//разворот бургера

document.querySelector('.menu__icon').addEventListener('click', function () {
	let burger_icon = document.querySelector('.menu__icon');
	let mobile_menu = document.querySelector('.menu__body');
	let before_background = document.querySelector('.menu__before-background');
	let menu__button_burger = document.querySelector('.menu__button-burger');
	let user_singin = document.querySelector('.menu__user');
	let body = document.querySelector('body');

	burger_icon.classList.toggle('_active');
	mobile_menu.classList.toggle('_active');
	before_background.classList.toggle('_active');
	menu__button_burger.classList.toggle('_active');
	user_singin.classList.toggle('_active');
	body.classList.toggle('_lock');
	// фон назакрытие меню бургер
	before_background.onclick = function () {
		burger_icon.classList.remove('_active');
		mobile_menu.classList.remove('_active');
		before_background.classList.remove('_active');
		menu__button_burger.classList.remove('_active');
		user_singin.classList.remove('_active');
		body.classList.remove('_lock');
	}
});

// нажимание кнопок категория и меню в развороте бургера
let btn_category = document.querySelector('#menu-btn-category');
let btn_menu = document.querySelector('#menu-btn-menu');
let menu_list_category = document.querySelector('.menu__list_category');
let menu_list_menu = document.querySelector('.menu__list_menu');


document.querySelector('#menu-btn-category').addEventListener('click', function () {
	btn_category.classList.add('_active');
	btn_menu.classList.remove('_active');

	menu_list_category.classList.remove('_deactive');
	menu_list_menu.classList.add('_deactive');

})
document.querySelector('#menu-btn-menu').addEventListener('click', function () {
	btn_menu.classList.add('_active');
	btn_category.classList.remove('_active');

	menu_list_category.classList.add('_deactive');
	menu_list_menu.classList.remove('_deactive');

})

// ПОИСК =============================================================================================
// Получение данных категории и инпута
let resultJsonProdSearch = null;
async function getProductsSearch() {
	const file = "json/products.json";
	let response = await fetch(file, { method: "GET" });

	if (response.ok) {
		resultJsonProdSearch = await response.json();
	}
}

document.querySelector('#seach_inp').addEventListener('input', function () {
	let inp = document.querySelector('#seach_inp').value;
	if (inp.length >= 3) {
		const seachBody = document.querySelector('.resultInp');
		const searchCategory = document.querySelector('.header-body__res-category').id;

		seachBody.style.display = 'block';
		let body = document.querySelector('body');
		body.classList.add('_lock');
		renderSearchList(searchCategory);
	} else {

		const seachBody = document.querySelector('.resultInp');
		let body = document.querySelector('body');
		seachBody.style.display = 'none';
		body.classList.remove('_lock');
	}
})


const renderSearchList = async (searchCategory) => {
	let data = await getProductsSearch();
	const searchContainer = document.querySelector('.resultInp__ul');
	data = reduceSearchData(resultJsonProdSearch.products, searchCategory);

	if (data.length > 0) {
		searchContainer.innerHTML = ``;
		searchContainer.innerHTML = `
		 <li class="head-item">
			  <div class="search-title">
					<div class="search-descr">
						 <p class="public" style= "margin-bottom: 10px;">Result search:</p>
					</div>
			  </div>
		 </li>
		 `;
		data.forEach((item) => {
			searchContainer.innerHTML += `
			<li data-cart-pid='11111' class="products-search__item item-product-search">
			<div class="item-product-search__imageAndAction">
				<a href="${item.url}" class="item-product-search__image _ibg">
					<img src="img/product/${item.image}" alt="">
				</a>
			</div>
			<div class="item-product-search__body">
				<div class="item-product-search__content">
					<h5 class="item-product-search__title">${item.title}</h5>
					<div class="item-product-search__attribute">
						<div class="item-product-search__atr">
							<div class="item-product-search__atr-name">Farm:</div>
							<div class="item-product-search__atr-res">Tharamis Farm</div>
						</div>
						<div class="item-product-search__atr">
							<div class="item-product-search__atr-name">Fresheness:</div>
							<div class="item-product-search__atr-res">1 day old</div>
						</div>
					</div>
				</div>
				<div class="item-product-search__rating">
					<img src="img/product/rating4.png" alt="">
				</div>
				<div class="item-product-search__action">
					<div class="item-product-search__prices">
						<div class="item-product-search__price">${item.price} USD</div>
						<div class="item-product-search__price item-product-search__price_old">${item.priceOld}
						</div>
					</div>
				</div>

			</div>

		</li>
			  `
		})
	} else {
		searchContainer.innerHTML = ``;
		searchContainer.innerHTML = `
		<li class="head-item">
			 <div class="search-title">
				  <div class="search-descr">
						<p class="public">No products</p>
				  </div>
			 </div>
		</li>
		`;
	}
}

const reduceSearchData = (postItems, searchCategory) => {
	const searchValue = document.querySelector('#seach_inp').value.toLowerCase();

	const filteredPosts = postItems.filter((item) => {
		return (
			(item.title.toLowerCase().includes(searchValue)
				|| item.descriptionFirst.toLowerCase().includes(searchValue)) && (item.category.toLowerCase().includes(searchCategory) || searchCategory.includes('all_category'))
		)
	})
	return filteredPosts;
}

// Закрываем поиск по клиу не на него
document.addEventListener('click', function (e) {
	if (!e.target.closest('.resultInp') || !e.target.closest('#seach_inp')) {
		let body = document.querySelector('body');
		body.classList.remove('_lock');
		const seachBody = document.querySelector('.resultInp');
		seachBody.style.display = 'none';
	}
})

// Адаптивный фон============
function isIE() {
	ua = navigator.userAgent;
	var is_ie = ua.indexOf("MSIE ") > -1 || ua.indexOf("Trident/") > -1;
	return is_ie;
}

function ibg() {

	if (isIE()) {
		let ibg = document.querySelectorAll("._ibg");
		for (var i = 0; i < ibg.length; i++) {
			if (ibg[i].querySelector('img') && ibg[i].querySelector('img').getAttribute('src') != null) {
				ibg[i].style.backgroundImage = 'url(' + ibg[i].querySelector('img').getAttribute('src') + ')';
			}
		}
	}
}
ibg();

// ============


// ОТРИСОВКА СТРАНИЦЫ ===================================

// Получение содержимого страницы категории==============================================

let urlPageSeach = window.location.search;
// let domainSeach = window.location.pathname + window.location.search;
let resPageName = urlPageSeach.split('-').join(' ');
let resNameByPage = resPageName.substr(1);




// Получение товаров=======================
let resultJsonProd = null;
async function getProducts() {
	const file = "json/products.json";
	let response = await fetch(file, { method: "GET" });

	if (response.ok) {
		resultJsonProd = await response.json();
		loadProductsPage(resultJsonProd);
	}
}
getProducts();

// отрисовка страницы
function loadProductsPage(data) {

	const productContent = document.querySelector('.page_content');
	let relatedMax = 0;
	data.products.forEach(function (elem) {

		const productId = elem.id;
		const productCategory = elem.category;
		const productSubCategory = elem.subcategory;
		const productUrl = elem.url;
		const productTitle = elem.title;
		const productText = elem.text;
		const productImage = elem.image;
		const productNext = elem.imageNext;
		const productNextTwo = elem.imageNextTwo;
		const productPrice = elem.price;
		const productPriceOld = elem.priceOld;
		const productRatingImg = elem.rating_img;
		const productLabels = elem.labels;
		const productSku = elem.sku;
		const productFreshness = elem.freshness;
		const productStock = elem.stock;
		const productBuyBy = elem.buyBy;
		const productDelivery = elem.delivery;
		const productDeliveryArea = elem.deliveryArea;
		const productDescriptionFirst = elem.descriptionFirst;
		const productFarm = elem.farm;



		function loadHtml() {

			let productTemplateLabels = '';
			if (productLabels) {
				let productTemplateLabelsStart = `<div class="product-img__labels">`;
				let productTemplateLabelsEnd = `</div>`;
				let productTemplateLabelsContent = '';

				productLabels.forEach(labelItem => {
					productTemplateLabelsContent += `<div class="product-img__label product-img__label_${labelItem.type}">${labelItem.value}</div>`;
				});

				productTemplateLabels += productTemplateLabelsStart;
				productTemplateLabels += productTemplateLabelsContent;
				productTemplateLabels += productTemplateLabelsEnd;
			}
			let productTemplate = `
			<div class="page_content _container">
			<div class="products__item products-page" data-pid="${productId}">
				<div class="page__bread bread-crumbs">
					<a href="index.html" class="bread-crumbs__index">Homepage <span>/</span></a>
					<a href="category.html?${productCategory}" class="bread-crumbs__index"><span
					class="bread-crumbs__category">${productCategory}</span> <span>/</span></a>
					<span class="bread-crumbs__this">${productTitle}</span>
				</div>
				<div class="page__body">
					<div class="page__img product-img">	
						${productTemplateLabels}
						<div class="product-img__first p-image _ibg">
							<img src="img/product/${productImage}" alt="">
						</div>
						<div class="product-img__next _ibg">
							<img src="img/product/${productNext}" alt="">
						</div>
						<div class="product-img__next _ibg">
							<img src="img/product/${productNextTwo}" alt="">
						</div>
					</div>
					<div class="page__content product-content">
						<div class="product-content__title">${productTitle}</div>
						<div class="product-content__rating">
							<img src="img/icons/category/${productRatingImg}" alt="">
							<div class="product-content__rating-text">(1 customer review)</div>
						</div>
						<div class="product-content__subtitle">
							${productDescriptionFirst}
						</div>
						<div class="product-content__attribute">
							<div class="product-content__atr">
								<div class="product-content__atr-name">SKU:</div>
								<div class="product-content__atr-res">${productSku}</div>
							</div>
							<div class="product-content__atr">
								<div class="product-content__atr-name">Freshness:</div>
								<div class="product-content__atr-res">${productFreshness}</div>
							</div>
							<div class="product-content__atr">
								<div class="product-content__atr-name ">Category:</div>
								<div class="product-content__atr-res product-content__atr-res_und">${productCategory}</div>
							</div>
							<div class="product-content__atr">
								<div class="product-content__atr-name">Buy by:</div>
								<div class="product-content__atr-res">${productBuyBy}</div>
							</div>
							<div class="product-content__atr">
								<div class="product-content__atr-name">Stock:</div>
								<div class="product-content__atr-res product-content__atr-res_und">${productStock}</div>
							</div>
							<div class="product-content__atr">
								<div class="product-content__atr-name">Delivery:</div>
								<div class="product-content__atr-res">${productDelivery}</div>
							</div>
							<div class="product-content__atr">
								<div class="product-content__atr-name">Farm</div>
								<div class="product-content__atr-res">${productFarm}</div>
							</div>
							<div class="product-content__atr">
								<div class="product-content__atr-name">Delivery area</div>
								<div class="product-content__atr-res">${productDeliveryArea}</div>
							</div>
						</div>
						<div class="product-content__action">
							<div class="product-content__item">
								<div class="product-content__prices">
									<div class="product-content__price">${productPrice} USD</div>
									<div class="product-content__price product-content__price_old">${productPriceOld} USD</div>
								</div>
								<div class="product-content__pcs pcs-prod">
									<input type="number" name="prodPageNum" value="1" placeholder="1 pcs"
										class="pcs-prod__inputProd">
									<span class="pcs-prod__plashProd">|</span>
									<div class="pcs-prod__textProd">Pcs</div>
								</div>
								<button class="product-content__button"><span class="_icon-plusByprod"></span>Add to cart
								</button>
							</div>
							<div class="product-content__allAction">
								<button class="product-content__wishList"><span class="_icon-wishlist"></span>Add to my wish
									list
								</button>
								<button class="product-content__compare"><span class="_icon-compare"></span>Compare
								</button>
							</div>
						</div>
						<div class="product-content__about">
							<div class="product-content__about-title">
								<div class="product-content__about-description about-title _active">Description</div>
								<div class="product-content__about-reviews about-title">Reviews <span>18</span></div>
								<div class="product-content__about-questions about-title">Questions <span>4</span></div>
							</div>
							<div class="product-content__description description">
								<div class="description__title">Origins</div>
								<div class="description__text">We work hard to ensure that the fruit and vegetables we sell are
									fresh and high in quality. If we don’t grow them ourselves, we source them from carefully
									chosen suppliers, preferring to buy locally whenever possible.
								</div>
								<div class="description__title">How to cook</div>
								<div class="description__text">From roasts, salads and soups to casseroles and cakes, Carrots
									will lend sweetness, texture and colour to an enormous number of recipes.
								</div>
								<div class="description__title">Full of Vitamins!</div>
								<div class="description__vitamins vitamins">
									<table class="vitamins__table">
										<thead>
											<tr>
												<th>Vitamins</th>
												<th>Quantity</th>
												<th>% DV</th>
											</tr>
										</thead>
										<!--ряд с ячейками заголовков-->
										<tbody>
											<tr>
												<td>Vitamin A equiv.</td>
												<td>735 μg</td>
												<td>104 %</td>
											</tr>
											<tr>
												<td>Thiamine (B1)</td>
												<td>0.066 mg</td>
												<td>6 %</td>
											</tr>
											<tr>
												<td>Niacin (B3)</td>
												<td>0.983 mg</td>
												<td>7 %</td>
											</tr>
											<tr>
												<td>Folate (Bg)</td>
												<td>19 μg</td>
												<td>5 %</td>
											</tr>
											<tr>
												<td>Vitamin C</td>
												<td>5.9 mg</td>
												<td>7 %</td>
											</tr>
											<tr>
												<td>Vitamin E</td>
												<td>0.66 mg</td>
												<td>4 %</td>
											</tr>
											<tr>
												<td>Vitamin K</td>
												<td>13.2</td>
												<td>13 %</td>
											</tr>
										</tbody>
										<!--ряд с ячейками тела таблицы-->
									</table>

								</div>

							</div>


						</div>
						<div class="product-content__reviews reviews"></div>
						<div class="product-content__questions questions"></div>
					</div>

				</div>
				<div class="page__related related">
					<div class="related__action">
						<div class="related__title">Related products</div>
						<a href="category.html?${productCategory}" class="related__more">More products <span class="_icon-button_rigth"></span></a>

					</div>
					<div class="products__items related__items">
						
					</div>
				</div>
			</div>
		</div>`;


			productContent.insertAdjacentHTML(
				'beforeend',
				productTemplate
			);


		}

		if (resNameByPage === productTitle) {
			loadHtml();

			const productsItems = document.querySelector('.related__items');


			let categoryProd = document.querySelector('.bread-crumbs__category').innerHTML;

			data.products.forEach(function (elem) {

				const productId = elem.id;
				const productCategory = elem.category;
				const productUrl = elem.url;
				const productTitle = elem.title;
				const productText = elem.text;
				const productImage = elem.image;
				const productPrice = elem.price;
				const productPriceOld = elem.priceOld;
				const productRatingImg = elem.rating_img;
				const productLabels = elem.labels;

				if (resNameByPage !== productTitle && productCategory === categoryProd) {
					if (relatedMax < 4) {
						function loadHtmlRelated() {
							let productTemplateStart = `<article data-pid="${productId}" class="products__item item-product">`;
							let productTemplateEnd = `</article>`;

							let productTemplateLabels = '';
							if (productLabels) {
								let productTemplateLabelsStart = `<div class="item-product__labels">`;
								let productTemplateLabelsEnd = `</div>`;
								let productTemplateLabelsContent = '';

								productLabels.forEach(labelItem => {
									productTemplateLabelsContent += `<div class="item-product__label item-product__label_${labelItem.type}">${labelItem.value}</div>`;
								});

								productTemplateLabels += productTemplateLabelsStart;
								productTemplateLabels += productTemplateLabelsContent;
								productTemplateLabels += productTemplateLabelsEnd;
							}

							let productTemplateImage = `
						<a href="${productUrl}" class="item-product__image p-image _ibg">
							<img src="img/product/${productImage}" alt="${productTitle}">
						</a>
					`;

							let productTemplateBodyStart = `<div class="item-product__body">`;
							let productTemplateBodyEnd = `</div>`;

							let productTemplateContent = `
						<div class="item-product__content">
							<h3 class="item-product__title">${productTitle}</h3>
							<div class="item-product__text">${productText}</div>
						</div>
					`;
							let productTemplateRating = '';
							if (productRatingImg) {
								productTemplateRating = `
						<div class="item-product__rating">
							<img src="img/product/${productRatingImg}" alt="">
						</div>
					`;
							}


							let productTemplateActionsStart = `<div class="item-product__action">`;
							let productTemplatePrices = '';
							let productTemplatePricesStart = `<div class="item-product__prices">`;
							let productTemplatePricesCurrent = `<div class="item-product__price">${productPrice} USD</div>`;
							let productTemplatePricesOld = '';
							if (productPriceOld) {
								productTemplatePricesOld = `<div class="item-product__price item-product__price_old">${productPriceOld}</div>`;
							}


							let productTemplatePricesEnd = `</div>`;

							productTemplatePrices = productTemplatePricesStart;
							productTemplatePrices += productTemplatePricesCurrent;
							if (productPriceOld) {
								productTemplatePrices += productTemplatePricesOld;
							}
							productTemplatePrices += productTemplatePricesEnd;

							let productTemplateActionsButtun = `<button class="item-product__button">Buy now</button>`;
							let productTemplateActionsEnd = `</div>`;
							let productTemplateActions = '';
							productTemplateActions += productTemplateActionsStart;
							productTemplateActions += productTemplatePrices;
							productTemplateActions += productTemplateActionsButtun;
							productTemplateActions += productTemplateActionsEnd;


							let productTemplateBody = '';
							productTemplateBody += productTemplateBodyStart;
							productTemplateBody += productTemplateContent;
							productTemplateBody += productTemplateRating;
							productTemplateBody += productTemplateActions;
							productTemplateBody += productTemplateBodyEnd;


							let productTemplate = '';
							productTemplate += productTemplateStart;
							productTemplate += productTemplateLabels;
							productTemplate += productTemplateImage;
							productTemplate += productTemplateBody;
							productTemplate += productTemplateEnd;


							productsItems.insertAdjacentHTML(
								'beforeend',
								productTemplate
							);

						}
						loadHtmlRelated();
						relatedMax++
					}
				}
			});
		}
	});
}





// ФУНКЦИОНАЛ ДОБАВЛЕНИЯ ТОВАРОВ В КОРЗИНУ===========================================


let productBody = document.querySelector('.page_content');

productBody.addEventListener('click', function (e) {
	if (e.target.classList.contains('item-product__button') || e.target.classList.contains('product-content__button')) {
		const productId = e.target.closest('.products__item').dataset.pid;
		addToCard(e.target, productId);
	}
})

function addToCard(productButton, productId) {
	if (!productButton.classList.contains('_hold')) {
		productButton.classList.add('_hold');
		productButton.classList.add('_fly');

		const card = document.querySelector('.header-body__basked')
		const product = document.querySelector(`[data-pid="${productId}"]`)
		const productImage = product.querySelector('.p-image');

		const productImageFly = productImage.cloneNode(true);

		const productImageFlyWigth = productImage.offsetWidth;
		const productImageFlyHeight = productImage.offsetHeight;
		const productImageFlytop = productImage.getBoundingClientRect().top;
		const productImageFlyLeft = productImage.getBoundingClientRect().left;

		productImageFly.setAttribute('class', '_flyImage _ibg');
		productImageFly.style.cssText = `
		left: ${productImageFlyLeft}px;
		top: ${productImageFlytop}px;
		width: ${productImageFlyWigth}px;
		height: ${productImageFlyHeight}px;
		`;
		document.body.append(productImageFly);

		const cardFlyLeft = card.getBoundingClientRect().left;
		const cardFlyTop = card.getBoundingClientRect().top;

		productImageFly.style.cssText = `
		left: ${cardFlyLeft}px;
		top: ${cardFlyTop}px;
		width: 0px;
		height: 0px;
		opacity:0;
		`;

		productImageFly.addEventListener('transitionend', function () {
			if (productButton.classList.contains('_fly')) {
				productImageFly.remove();
				updateCart(productButton, productId);
				productButton.classList.remove('_fly');
				if (productButton.classList.contains('product-content__button')) {
					updateCart(productButton, productId, true, false);
				}
			}
		});
	}
}



// защита ввода
document.querySelector('.page_content').addEventListener('focusout', function (e) {
	if (e.target.closest('.pcs-prod__inputProd')) {
		if (e.target.value <= 0) {
			e.target.value = 1;
			e.target.setAttribute('value', '1');
		}
	}
})



// description =====================

document.querySelector('.page').addEventListener('click', function (e) {
	if (e.target.closest('.about-title')) {
		const aboutTitle = document.querySelectorAll('.about-title');
		aboutTitle.forEach(function (elem) { elem.classList.remove('_active') })
		e.target.classList.add('_active');

		if (e.target.classList.contains('product-content__about-description')) {
			const descrBody = document.querySelector('.description');
			descrBody.style.display = "block";
			const revBody = document.querySelector('.reviews');
			revBody.style.display = "none";
			const queBody = document.querySelector('.questions');
			queBody.style.display = "none";
		}
		if (e.target.classList.contains('product-content__about-reviews')) {
			const descrBody = document.querySelector('.description');
			descrBody.style.display = "none";
			const revBody = document.querySelector('.reviews');
			revBody.style.display = "block";
			const queBody = document.querySelector('.questions');
			queBody.style.display = "none";
		}
		if (e.target.classList.contains('product-content__about-questions')) {
			const descrBody = document.querySelector('.description');
			descrBody.style.display = "none";
			const revBody = document.querySelector('.reviews');
			revBody.style.display = "none";
			const queBody = document.querySelector('.questions');
			queBody.style.display = "block";
		}
	}
})

// Спойлер в подвале меню

let footer_title = document.querySelectorAll('.menu-footer__title');

for (let i = 0; i < footer_title.length; i++) {
	footer_title[i].onclick = footerSpoiler;
}

function footerSpoiler() {
	this.classList.toggle('_active');
	this.parentNode.lastElementChild.classList.toggle('_active');
}
// BASKET POPUP ====================================================================
// открываем
document.querySelector('._icon-header_basked').addEventListener('click', function () {
	let popup = document.querySelector('.popup-bascet');
	let pop_body = document.querySelector('.popup-bascet__body');
	let pop_background = document.querySelector('.popup-bascet__background ');
	let body = document.querySelector('body');


	popup.classList.add('_active');
	pop_body.classList.add('_active');
	pop_background.classList.add('_active');
	body.classList.add('_lock');

	if (localStorage.getItem('cartlist')) {
		document.querySelector('.popup-bascet__product').innerHTML = localStorage.getItem('cartlist');
	}


	resProductSumm();

});
// закрываем на крестик
document.querySelector('.popup-bascet__icon-close').addEventListener('click', function () {
	let popup = document.querySelector('.popup-bascet');
	let pop_body = document.querySelector('.popup-bascet__body');
	let pop_background = document.querySelector('.popup-bascet__background ');
	let body = document.querySelector('body');


	popup.classList.remove('_active');
	pop_body.classList.remove('_active');
	pop_background.classList.remove('_active');
	body.classList.remove('_lock');
	if (window.location.pathname === '/checkout.html') {
		document.querySelector('.order__product').innerHTML = localStorage.getItem('cartlist');
	}

});
// закрываем на фон 
document.querySelector('.popup-bascet__background').addEventListener('click', function () {
	let popup = document.querySelector('.popup-bascet');
	let pop_body = document.querySelector('.popup-bascet__body');
	let pop_background = document.querySelector('.popup-bascet__background ');
	let body = document.querySelector('body');


	popup.classList.remove('_active');
	pop_body.classList.remove('_active');
	pop_background.classList.remove('_active');
	body.classList.remove('_lock');

	if (window.location.pathname === '/checkout.html') {
		document.querySelector('.order__product').innerHTML = localStorage.getItem('cartlist');
	}


});

// переход на сайт go to shop
document.querySelector('.popup-bascet__goshop').addEventListener('click', function () {
	let popup = document.querySelector('.popup-bascet');
	let pop_body = document.querySelector('.popup-bascet__body');
	let pop_background = document.querySelector('.popup-bascet__background ');
	let body = document.querySelector('body');


	popup.classList.remove('_active');
	pop_body.classList.remove('_active');
	pop_background.classList.remove('_active');
	body.classList.remove('_lock');

});
//  КОРЗИНА==================================


// Добавляемм товары в корзину и удаляем(универсальная функция)
function updateCart(productButton, productId, productAdd = true, productFocus = true) {

	const cart = document.querySelector('.header-body__basked');
	const cartQuantity = cart.querySelector('.header-body__add');
	const cartProduct = document.querySelector(`[data-cart-pid="${productId}"]`);
	const cartList = document.querySelector('.cart-list');

	// Добавляем

	if (productAdd) {
		if (cartQuantity) {
			if (!productFocus) {
				const cartProductQuantity = cartList.querySelectorAll('.pcs__input');
				let resultSumm = 0;
				for (let i = 0; i < cartProductQuantity.length; i++) {
					resultSumm += Number(cartProductQuantity[i].value)
				}
				cartQuantity.innerHTML = resultSumm;
			} else {
				cartQuantity.innerHTML = ++cartQuantity.innerHTML;
			}

		} else {
			cart.insertAdjacentHTML('beforeend', '<div class="header-body__add">1</div>')

		}

		if (!cartProduct) {
			const product = document.querySelector(`[data-pid="${productId}"]`);
			if (product.classList.contains('item-product-list')) {
				const cartProductUrl = product.querySelector('.item-product-list__image').href;
				const cartProductImage = product.querySelector('.item-product-list__image').innerHTML;
				const cartProductTitle = product.querySelector('.item-product-list__title').innerHTML;
				const cartProductPrice = product.querySelector('.item-product-list__price').innerHTML;
				const cartProductPriceOld = product.querySelector('.item-product-list__price_old').innerHTML;
				const cartProductRating = product.querySelector('.item-product-list__rating').innerHTML;
				const cartProductContent = `
				<div class="item-product-basket__imageAndAction">
					<a href="${cartProductUrl}" class="item-product-basket__image _ibg">
						${cartProductImage}
					</a>
					<div class="item-product-basket__whishlist actionItems">
						<div class="_icon-wishlist actionItems__img"></div>
						<div class="actionItems__text">Wishlist</div>
					</div>
					<div class="item-product-basket__compare actionItems">
						<div class="_icon-compare actionItems__img"></div>
						<div class="actionItems__text">Compare</div>
					</div>
					<div class="item-product-basket__remove actionItems">
						<div class="_icon-remove actionItems__img"></div>
						<div class="actionItems__text">Remove</div>
					</div>
				</div>
				<div class="item-product-basket__body">
					<div class="item-product-basket__content">
						<h5 class="item-product-basket__title">${cartProductTitle}</h5>
						<div class="item-product-basket__attribute">
							<div class="item-product-basket__atr">
								<div class="item-product-basket__atr-name">Farm:</div>
								<div class="item-product-basket__atr-res">Tharamis Farm</div>
							</div>
							<div class="item-product-basket__atr">
								<div class="item-product-basket__atr-name">Fresheness:</div>
								<div class="item-product-basket__atr-res">1 day old</div>
							</div>
						</div>
					</div>
					<div class="item-product-basket__rating">
						${cartProductRating}
					</div>
					<div class="item-product-basket__action">
						<div class="item-product-basket__prices">
							<div class="item-product-basket__price">${cartProductPrice}</div>
							<div class="item-product-basket__price item-product-basket__price_old">${cartProductPriceOld}</div>
						</div>
						<div class="item-product-basket__pcs pcs">
							<input type="number" name="prodNum" value="1" placeholder="1 pcs" class="pcs__input">
							<span class="pcs__plash">|</span>
							<div class="pcs__text">Pcs</div>
						</div>

					</div>

				</div>`;

				cartList.insertAdjacentHTML(
					'beforeend',
					`<li data-cart-pid="${productId}" class="products-basket__item item-product-basket"> ${cartProductContent}</li>`
				);
			}
			if (product.classList.contains('item-product')) {
				const cartProductUrl = product.querySelector('.item-product__image').href;
				const cartProductImage = product.querySelector('.item-product__image').innerHTML;
				const cartProductTitle = product.querySelector('.item-product__title').innerHTML;
				const cartProductPrice = product.querySelector('.item-product__price').innerHTML;
				const cartProductPriceOld = product.querySelector('.item-product__price_old').innerHTML;
				const cartProductRating = product.querySelector('.item-product__rating').innerHTML;
				const cartProductContent = `
				<div class="item-product-basket__imageAndAction">
					<a href="${cartProductUrl}" class="item-product-basket__image _ibg">
						${cartProductImage}
					</a>
					<div class="item-product-basket__whishlist actionItems">
						<div class="_icon-wishlist actionItems__img"></div>
						<div class="actionItems__text">Wishlist</div>
					</div>
					<div class="item-product-basket__compare actionItems">
						<div class="_icon-compare actionItems__img"></div>
						<div class="actionItems__text">Compare</div>
					</div>
					<div class="item-product-basket__remove actionItems">
						<div class="_icon-remove actionItems__img"></div>
						<div class="actionItems__text">Remove</div>
					</div>
				</div>
				<div class="item-product-basket__body">
					<div class="item-product-basket__content">
						<h5 class="item-product-basket__title">${cartProductTitle}</h5>
						<div class="item-product-basket__attribute">
							<div class="item-product-basket__atr">
								<div class="item-product-basket__atr-name">Farm:</div>
								<div class="item-product-basket__atr-res">Tharamis Farm</div>
							</div>
							<div class="item-product-basket__atr">
								<div class="item-product-basket__atr-name">Fresheness:</div>
								<div class="item-product-basket__atr-res">1 day old</div>
							</div>
						</div>
					</div>
					<div class="item-product-basket__rating">
						${cartProductRating}
					</div>
					<div class="item-product-basket__action">
						<div class="item-product-basket__prices">
							<div class="item-product-basket__price">${cartProductPrice}</div>
							<div class="item-product-basket__price item-product-basket__price_old">${cartProductPriceOld}</div>
						</div>
						<div class="item-product-basket__pcs pcs">
							<input type="number" name="prodNum" value="1" placeholder="1 pcs" class="pcs__input">
							<span class="pcs__plash">|</span>
							<div class="pcs__text">Pcs</div>
						</div>

					</div>

				</div>`;

				cartList.insertAdjacentHTML(
					'beforeend',
					`<li data-cart-pid="${productId}" class="products-basket__item item-product-basket"> ${cartProductContent}</li>`
				);
			}
			if (product.classList.contains('products-page')) {
				const value = product.querySelector('.pcs-prod__inputProd').value;
				const cartProductImage = product.querySelector('.product-img__first').innerHTML;
				const cartProductTitle = product.querySelector('.product-content__title').innerHTML;
				const cartProductPrice = product.querySelector('.product-content__price').innerHTML;
				const cartProductPriceOld = product.querySelector('.product-content__price_old').innerHTML;
				// const cartProductRating = product.querySelector('.product-content__rating').innerHTML;
				const cartProductContent = `
				<div class="item-product-basket__imageAndAction">
					<a href="${window.location}" class="item-product-basket__image _ibg">
						${cartProductImage}
					</a>
					<div class="item-product-basket__whishlist actionItems">
						<div class="_icon-wishlist actionItems__img"></div>
						<div class="actionItems__text">Wishlist</div>
					</div>
					<div class="item-product-basket__compare actionItems">
						<div class="_icon-compare actionItems__img"></div>
						<div class="actionItems__text">Compare</div>
					</div>
					<div class="item-product-basket__remove actionItems">
						<div class="_icon-remove actionItems__img"></div>
						<div class="actionItems__text">Remove</div>
					</div>
				</div>
				<div class="item-product-basket__body">
					<div class="item-product-basket__content">
						<h5 class="item-product-basket__title">${cartProductTitle}</h5>
						<div class="item-product-basket__attribute">
							<div class="item-product-basket__atr">
								<div class="item-product-basket__atr-name">Farm:</div>
								<div class="item-product-basket__atr-res">Tharamis Farm</div>
							</div>
							<div class="item-product-basket__atr">
								<div class="item-product-basket__atr-name">Fresheness:</div>
								<div class="item-product-basket__atr-res">1 day old</div>
							</div>
						</div>
					</div>
					<div class="item-product-basket__rating">
						<img src="img/product/rating4.png" alt="">
					</div>
					<div class="item-product-basket__action">
						<div class="item-product-basket__prices">
							<div class="item-product-basket__price">${cartProductPrice}</div>
							<div class="item-product-basket__price item-product-basket__price_old">${cartProductPriceOld}</div>
						</div>
						<div class="item-product-basket__pcs pcs">
							<input type="number" name="prodNum" value="${value}" placeholder="1 pcs" class="pcs__input">
							<span class="pcs__plash">|</span>
							<div class="pcs__text">Pcs</div>
						</div>

					</div>

				</div>`;

				cartList.insertAdjacentHTML(
					'beforeend',
					`<li data-cart-pid="${productId}" class="products-basket__item item-product-basket"> ${cartProductContent}</li>`
				);
			}


		} else {

			const cartProductQuantity = cartProduct.querySelector('.pcs__input');
			if (productFocus) {
				if (productButton.classList.contains('product-content__button')) {
					let inpForPage = productButton.parentNode.querySelector('.pcs-prod__inputProd');
					cartProductQuantity.value = +inpForPage.value + +cartProductQuantity.value;
				} else {
					cartProductQuantity.value = ++cartProductQuantity.value;
				}



				// для localStorage
				cartProductQuantity.setAttribute('value', `${cartProductQuantity.value}`);
			}


		}
		productButton.classList.remove('_hold');
	} else {
		const cartProductQuantity = cartProduct.querySelector('.pcs__input');

		cartProductQuantity.value = --cartProductQuantity.value;

		if (!parseInt(cartProductQuantity.value)) {
			cartProduct.remove();
		}
		const cartQuantityValue = --cartQuantity.innerHTML
		// для localStorage
		cartProductQuantity.setAttribute('value', `${cartProductQuantity.value}`);
		if (cartQuantityValue) {

			// cartQuantityValue = cartQuantityValue;
		} else {
			cartQuantity.remove();

			const popup = document.querySelector('.popup-bascet');
			const pop_body = document.querySelector('.popup-bascet__body');
			const pop_background = document.querySelector('.popup-bascet__background ');
			const body = document.querySelector('body');

			popup.classList.remove('_active');
			pop_body.classList.remove('_active');
			pop_background.classList.remove('_active');
			body.classList.remove('_lock');
		}
	}




	resProductSumm();



	const resultCartList = document.querySelector('.popup-bascet__product');
	const resultCartBasket = document.querySelector('.header-body__basked');
	localStorage.setItem('cartlist', resultCartList.innerHTML);
	localStorage.setItem('basket', resultCartBasket.innerHTML);


}


// удаление товаров из корзины
let basketBody = document.querySelector('.popup-bascet__product');
if (window.location.pathname !== '/checkout.html') {
	basketBody.addEventListener('click', function (e) {
		if (e.target.closest('.item-product-basket__remove')) {
			const productId = e.target.closest('.products-basket__item').dataset.cartPid;
			updateCart(e.target, productId, false);
			let inp = e.target.parentNode.parentNode.parentNode.querySelector('.pcs__input');
			inp.setAttribute('value', `${inp.value}`); // посмотреть!!!!
		}
		// go shop
		if (e.target.closest('.popup-bascet__goshop')) {
			let popup = document.querySelector('.popup-bascet');
			let pop_body = document.querySelector('.popup-bascet__body');
			let pop_background = document.querySelector('.popup-bascet__background ');
			let body = document.querySelector('body');


			popup.classList.remove('_active');
			pop_body.classList.remove('_active');
			pop_background.classList.remove('_active');
			body.classList.remove('_lock');
		}
	});



	basketBody.addEventListener('focusout', function (e) {
		if (e.target.closest('.pcs__input')) {

			if (e.target.value <= 0) {
				e.target.value = 1;
				e.target.setAttribute('value', '1');
				const productId = e.target.closest('.products-basket__item').dataset.cartPid;
				updateCart(e.target, productId, true, false);

			} else {
				const productId = e.target.closest('.products-basket__item').dataset.cartPid;

				e.target.setAttribute('value', `${e.target.value}`);

				updateCart(e.target, productId, true, false);
			}
			resProductSumm();
		}
	})
} else {
	basketBody.addEventListener('click', function (e) {
		if (e.target.closest('.item-product-basket__remove')) {
			const product = e.target.closest('.products-basket__item');
			const cartProductQuantity = product.querySelector('.pcs__input');
			const cart = document.querySelector('.header-body__basked');
			const cartQuantity = cart.querySelector('.header-body__add');

			cartProductQuantity.value = --cartProductQuantity.value;

			if (!parseInt(cartProductQuantity.value)) {
				product.remove();
			}
			const cartQuantityValue = --cartQuantity.innerHTML
			// для localStorage
			cartProductQuantity.setAttribute('value', `${cartProductQuantity.value}`);
			if (cartQuantityValue) {

				// cartQuantityValue = cartQuantityValue;
			} else {
				cartQuantity.remove();
				const popup = document.querySelector('.popup-bascet');
				const pop_body = document.querySelector('.popup-bascet__body');
				const pop_background = document.querySelector('.popup-bascet__background ');
				const body = document.querySelector('body');

				popup.classList.remove('_active');
				pop_body.classList.remove('_active');
				pop_background.classList.remove('_active');
				body.classList.remove('_lock');

			}


			let inp = e.target.parentNode.parentNode.parentNode.querySelector('.pcs__input');
			inp.setAttribute('value', `${inp.value}`); // посмотреть!!!!
			const resultCartList = document.querySelector('.popup-bascet__product');
			const resultCartBasket = document.querySelector('.header-body__basked');
			localStorage.setItem('cartlist', resultCartList.innerHTML);
			localStorage.setItem('basket', resultCartBasket.innerHTML);

			document.querySelector('.order__product').innerHTML = localStorage.getItem('cartlist');
			resProductSumm()
			resProductSummOrder()
		}

	});
	basketBody.addEventListener('focusout', function (e) {
		if (e.target.closest('.pcs__input')) {

			const cartProductQuantity = basketBody.querySelectorAll('.pcs__input');
			const cart = document.querySelector('.header-body__basked');
			const cartQuantity = cart.querySelector('.header-body__add');
			if (e.target.value <= 0) {
				e.target.value = 1;
				e.target.setAttribute('value', '1');

				let resultSumm = 0;
				for (let i = 0; i < cartProductQuantity.length; i++) {
					resultSumm += Number(cartProductQuantity[i].value)
				}
				cartQuantity.innerHTML = resultSumm;
				resProductSumm()
				resProductSummOrder()

			} else {
				const productId = e.target.closest('.products-basket__item').dataset.cartPid;

				e.target.setAttribute('value', `${e.target.value}`);

				let resultSumm = 0;
				for (let i = 0; i < cartProductQuantity.length; i++) {
					resultSumm += Number(cartProductQuantity[i].value)
				}
				cartQuantity.innerHTML = resultSumm;
			}
			const resultCartList = document.querySelector('.popup-bascet__product');
			const resultCartBasket = document.querySelector('.header-body__basked');
			localStorage.setItem('cartlist', resultCartList.innerHTML);
			localStorage.setItem('basket', resultCartBasket.innerHTML);
			document.querySelector('.order__product').innerHTML = localStorage.getItem('cartlist');
			resProductSumm();
			resProductSummOrder()
		}
	})
}

// Подсчет стоимости

function resProductSumm() {
	let basketBody = document.querySelector('.popup-bascet__product');
	const product = basketBody.querySelectorAll('.item-product-basket');
	let resSumm = 0;
	for (let i = 0; i < product.length; i++) {
		const summ = product[i].querySelector('.item-product-basket__price').innerHTML;
		const pcs = product[i].querySelector('.pcs__input').value;

		resSumm += parseInt(summ) * +pcs;
	}

	const res = document.querySelector('.popup-bascet__result-sum');
	res.innerHTML = `${resSumm} USD`;

	goCheckNext();
};

// оформление если в корзине что то есть 
function goCheckNext() {
	let goCheck = document.querySelector('.popup-bascet__gotocheck');
	let numSumm = document.querySelector('.cart-list').children.length;
	if (numSumm === 0) {
		goCheck.style.display = 'none';
	} else {
		goCheck.style.display = 'block';
	}
}














// USER POPUP ====================================================================

// открываем
document.querySelector('._icon-header_user').addEventListener('click', function () {
	let popup = document.querySelector('.popup-user');
	let pop_body = document.querySelector('.popup-user__body');
	let pop_background = document.querySelector('.popup-user__background ');
	let body = document.querySelector('body');


	popup.classList.add('_active');
	pop_body.classList.add('_active');
	pop_background.classList.add('_active');
	body.classList.add('_lock');

});

// открываем из мобильного меню
document.querySelector('.menu__user-row').addEventListener('click', function () {
	let popup = document.querySelector('.popup-user');
	let pop_body = document.querySelector('.popup-user__body');
	let pop_background = document.querySelector('.popup-user__background ');
	let body = document.querySelector('body');



	popup.classList.add('_active');
	pop_body.classList.add('_active');
	pop_background.classList.add('_active');
	body.classList.add('_lock');


	// одновременно прячем мобильное меню
	let burger_icon = document.querySelector('.menu__icon');
	let mobile_menu = document.querySelector('.menu__body');
	let before_background = document.querySelector('.menu__before-background');
	let menu__button_burger = document.querySelector('.menu__button-burger');
	let user_singin = document.querySelector('.menu__user')

	burger_icon.classList.remove('_active');
	mobile_menu.classList.remove('_active');
	before_background.classList.remove('_active');
	menu__button_burger.classList.remove('_active');
	user_singin.classList.remove('_active');


});


// закрываем на крестик
document.querySelector('.popup-user__icon-close').addEventListener('click', function () {
	let popup = document.querySelector('.popup-user');
	let pop_body = document.querySelector('.popup-user__body');
	let pop_background = document.querySelector('.popup-user__background ');
	let body = document.querySelector('body');


	popup.classList.remove('_active');
	pop_body.classList.remove('_active');
	pop_background.classList.remove('_active');
	body.classList.remove('_lock');

});
// закрываем на фон 
document.querySelector('.popup-user__background').addEventListener('click', function () {
	let popup = document.querySelector('.popup-user');
	let pop_body = document.querySelector('.popup-user__body');
	let pop_background = document.querySelector('.popup-user__background ');
	let body = document.querySelector('body');

	popup.classList.remove('_active');
	pop_body.classList.remove('_active');
	pop_background.classList.remove('_active');
	body.classList.remove('_lock');

});


// ============================================================================================

